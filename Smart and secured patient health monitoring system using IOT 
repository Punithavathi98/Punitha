#include <WiFi.h>
#include <ThingSpeak.h>
#include "DHT.h"

#define DHTPIN 4 // GPIO for DHT
#define DHTTYPE DHT11
#define PulsePin 34 // Analog pin for pulse sensor

DHT dht(DHTPIN, DHTTYPE);

const char* ssid = "YOUR_WIFI_SSID";
const char* password = "YOUR_WIFI_PASSWORD";

WiFiClient client;
unsigned long myChannelNumber = YOUR_CHANNEL_NUMBER;
const char * myWriteAPIKey = "YOUR_THINGSPEAK_API_KEY";

void setup() {
Serial.begin(115200);
WiFi.begin(ssid, password);
while (WiFi.status() != WL_CONNECTED) {
delay(1000);
Serial.println("Connecting to WiFi...");
}

Serial.println("WiFi connected");
ThingSpeak.begin(client);
dht.begin();
}

void loop() {
float temperature = dht.readTemperature();
float humidity = dht.readHumidity();
int pulse = analogRead(PulsePin); // Simulated analog pulse sensor reading

if (isnan(temperature) || isnan(humidity)) {
Serial.println("Failed to read from DHT sensor!");
return;
}

Serial.println("Temp: " + String(temperature));
Serial.println("Humidity: " + String(humidity));
Serial.println("Pulse: " + String(pulse));

// Send data to ThingSpeak
ThingSpeak.setField(1, temperature);
ThingSpeak.setField(2, humidity);
ThingSpeak.setField(3, pulse);
ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey);

delay(15000); // ThingSpeak limit: 15 sec/update
}